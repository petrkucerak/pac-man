<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="pacman_8h" kind="file" language="C++">
    <compoundname>pacman.h</compoundname>
    <includes refid="data__structures_8h" local="yes">data_structures.h</includes>
    <includes refid="map__template_8h" local="yes">map_template.h</includes>
    <includedby refid="apoman_8c" local="yes">C:/Users/Petr/Documents/apo_semestralka/apoman.c</includedby>
    <includedby refid="game_8h" local="yes">C:/Users/Petr/Documents/apo_semestralka/game.h</includedby>
    <includedby refid="pacman_8c" local="yes">C:/Users/Petr/Documents/apo_semestralka/pacman.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>map_template.h</label>
        <link refid="map__template_8h"/>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>C:/Users/Petr/Documents/apo_semestralka/pacman.h</label>
        <link refid="pacman_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>pthread.h</label>
      </node>
      <node id="2">
        <label>data_structures.h</label>
        <link refid="data__structures_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>C:/Users/Petr/Documents/apo_semestralka/game.c</label>
        <link refid="game_8c"/>
      </node>
      <node id="3">
        <label>C:/Users/Petr/Documents/apo_semestralka/game.h</label>
        <link refid="game_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Users/Petr/Documents/apo_semestralka/pacman.c</label>
        <link refid="pacman_8c"/>
      </node>
      <node id="1">
        <label>C:/Users/Petr/Documents/apo_semestralka/pacman.h</label>
        <link refid="pacman_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/Petr/Documents/apo_semestralka/menu_utilities.c</label>
        <link refid="menu__utilities_8c"/>
      </node>
      <node id="2">
        <label>C:/Users/Petr/Documents/apo_semestralka/apoman.c</label>
        <link refid="apoman_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pacman_8h_1a6049d528917cb950659f2972d92cb432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpacman__type" kindref="compound">pacman_type</ref></type>
        <definition>pacman_type create_pacman</definition>
        <argsstring>(map_data *map, int lives, int score)</argsstring>
        <name>create_pacman</name>
        <param>
          <type><ref refid="structmap__data" kindref="compound">map_data</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lives</declname>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/pacman.h" line="21" column="13" bodyfile="C:/Users/Petr/Documents/apo_semestralka/pacman.c" bodystart="26" bodyend="36" declfile="C:/Users/Petr/Documents/apo_semestralka/pacman.h" declline="21" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="pacman_8h_1ae1b36e370a9b73a0eed9ad43e53db1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pacman_move</definition>
        <argsstring>(pacman_type *pacman, map_data *map)</argsstring>
        <name>pacman_move</name>
        <param>
          <type><ref refid="structpacman__type" kindref="compound">pacman_type</ref> *</type>
          <declname>pacman</declname>
        </param>
        <param>
          <type><ref refid="structmap__data" kindref="compound">map_data</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/pacman.h" line="28" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/pacman.c" bodystart="41" bodyend="85" declfile="C:/Users/Petr/Documents/apo_semestralka/pacman.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="pacman_8h_1a9b14d2c075ef0768af01d694a839cd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void draw_pacman</definition>
        <argsstring>(pacman_type *pacman, fb_data *fb, map_data *map)</argsstring>
        <name>draw_pacman</name>
        <param>
          <type><ref refid="structpacman__type" kindref="compound">pacman_type</ref> *</type>
          <declname>pacman</declname>
        </param>
        <param>
          <type><ref refid="structfb__data" kindref="compound">fb_data</ref> *</type>
          <declname>fb</declname>
        </param>
        <param>
          <type><ref refid="structmap__data" kindref="compound">map_data</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/pacman.h" line="33" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/pacman.c" bodystart="93" bodyend="115" declfile="C:/Users/Petr/Documents/apo_semestralka/pacman.h" declline="33" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>All<sp/>inportant<sp/>functions<sp/>for<sp/>pacman<sp/>on<sp/>MicroZed</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>based<sp/>MZ_APO<sp/>board<sp/>designed<sp/>by<sp/>Petr<sp/>Porazil<sp/>at<sp/>PiKRON</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>pacman.h<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>all<sp/>important<sp/>functions<sp/>for<sp/>pacman</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>(C)<sp/>Copyright<sp/>2021<sp/>by<sp/>Lukas<sp/>Nejezchleb</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>e-mail:<sp/><sp/><sp/>nejezluk@fel.cvut.cz</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>license:<sp/><sp/>any<sp/>combination<sp/>of<sp/>GPL,<sp/>LGPL,<sp/>MPL<sp/>or<sp/>BSD<sp/>licenses</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PACMAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACMAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__structures_8h" kindref="compound">data_structures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="map__template_8h" kindref="compound">map_template.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>@returns<sp/>Pacman<sp/>at<sp/>spawning<sp/>point<sp/>of<sp/>map</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/><ref refid="pacman_8h_1a6049d528917cb950659f2972d92cb432" kindref="member">create_pacman</ref>(<ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lives,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>reads<sp/>key<sp/>from<sp/>terminal,<sp/>changes<sp/>direction<sp/>if<sp/>moving<sp/>this<sp/>direction<sp/>is<sp/>possible</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>moves<sp/>the<sp/>pacman<sp/>in<sp/>the<sp/>direction<sp/>if<sp/>possible</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>@returns<sp/>true<sp/>if<sp/>pacman<sp/>has<sp/>eaten<sp/>supercoin</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="pacman_8h_1ae1b36e370a9b73a0eed9ad43e53db1f0" kindref="member">pacman_move</ref>(<ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/>*pacman,<sp/><ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>draws<sp/>pacman<sp/>to<sp/>the<sp/>frame<sp/>buffer</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pacman_8h_1a9b14d2c075ef0768af01d694a839cd38" kindref="member">draw_pacman</ref>(<ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/>*pacman,<sp/><ref refid="structfb__data" kindref="compound">fb_data</ref><sp/>*fb,<sp/><ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Petr/Documents/apo_semestralka/pacman.h"/>
  </compounddef>
</doxygen>
