<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="final__score_8c" kind="file" language="C++">
    <compoundname>final_score.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="final__score_8h" local="yes">final_score.h</includes>
    <includes refid="data__structures_8h" local="yes">data_structures.h</includes>
    <includes refid="draw__shapes_8h" local="yes">draw_shapes.h</includes>
    <includes refid="update__peripherals_8h" local="yes">update_peripherals.h</includes>
    <includes refid="text__fb_8h" local="yes">text_fb.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>map_template.h</label>
        <link refid="map__template_8h"/>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>font_types.h</label>
        <link refid="font__types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>draw_shapes.h</label>
        <link refid="draw__shapes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>update_peripherals.h</label>
        <link refid="update__peripherals_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>pthread.h</label>
      </node>
      <node id="12">
        <label>text_fb.h</label>
        <link refid="text__fb_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>unistd.h</label>
      </node>
      <node id="1">
        <label>final_score.c</label>
        <link refid="final__score_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>final_score.h</label>
        <link refid="final__score_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>data_structures.h</label>
        <link refid="data__structures_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="final__score_8c_1a781cab829dad372f9f55089f57a85df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool draw_final_score</definition>
        <argsstring>(int score, fb_data *frame_buff, unsigned char *lcd_mem_base, font_descriptor_t *font)</argsstring>
        <name>draw_final_score</name>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <param>
          <type><ref refid="structfb__data" kindref="compound">fb_data</ref> *</type>
          <declname>frame_buff</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>lcd_mem_base</declname>
        </param>
        <param>
          <type><ref refid="structfont__descriptor__t" kindref="compound">font_descriptor_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Draws the final score to the screen and waits for user input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>score</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_buff</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lcd_mem_base</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the user pressed the s key and therefor wants to continue playing </para>
</simplesect>
<simplesect kind="return"><para>false if the user pressed the q key indicating he wants to end the program </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/final_score.c" line="20" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/final_score.c" bodystart="20" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module with function draw final score that draws the final score to the screen and waits for user input. Returns true if the user pressed the s key and therefor wants to continue playing or the q key indicating he wants to end the program. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Petr Kucera (<ulink url="mailto:kucerp28@fel.cvut.cz">kucerp28@fel.cvut.cz</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2021-05-04</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="final__score_8h" kindref="compound">final_score.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__structures_8h" kindref="compound">data_structures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="draw__shapes_8h" kindref="compound">draw_shapes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="update__peripherals_8h" kindref="compound">update_peripherals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="text__fb_8h" kindref="compound">text_fb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="final__score_8c_1a781cab829dad372f9f55089f57a85df0" kindref="member">draw_final_score</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score,<sp/><ref refid="structfb__data" kindref="compound">fb_data</ref><sp/>*frame_buff,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lcd_mem_base,<sp/><ref refid="structfont__descriptor__t" kindref="compound">font_descriptor_t</ref><sp/>*font)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="draw__shapes_8c_1a6d5b7bfa9cee0ff7724230c622354531" kindref="member">set_background</ref>(frame_buff,<sp/>0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="text__fb_8c_1a6c9c3fce44e83e9b6076cdc74ba11464" kindref="member">draw_text_center</ref>(frame_buff,<sp/></highlight><highlight class="stringliteral">&quot;SKORE&quot;</highlight><highlight class="normal">,<sp/>frame_buff-&gt;<ref refid="structfb__data_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref><sp/>/<sp/>2,<sp/>frame_buff-&gt;<ref refid="structfb__data_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>/<sp/>10,<sp/>3,<sp/>font,<sp/>0xffff);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>string_tmp[20];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(string_tmp,<sp/>20,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>score);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="text__fb_8c_1a6c9c3fce44e83e9b6076cdc74ba11464" kindref="member">draw_text_center</ref>(frame_buff,<sp/>string_tmp,<sp/>frame_buff-&gt;<ref refid="structfb__data_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref><sp/>/<sp/>2,<sp/>frame_buff-&gt;<ref refid="structfb__data_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>/<sp/>2,<sp/>4,<sp/>font,<sp/>0xffff);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="text__fb_8c_1a6c9c3fce44e83e9b6076cdc74ba11464" kindref="member">draw_text_center</ref>(frame_buff,<sp/></highlight><highlight class="stringliteral">&quot;ZNOVU<sp/>[S]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KONEC<sp/>[T]&quot;</highlight><highlight class="normal">,<sp/>frame_buff-&gt;<ref refid="structfb__data_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref><sp/>/<sp/>2,<sp/>frame_buff-&gt;<ref refid="structfb__data_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>-<sp/>frame_buff-&gt;<ref refid="structfb__data_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>/<sp/>10,<sp/>2,<sp/>font,<sp/>0xffff);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="update__peripherals_8c_1aa30de0dfddc51283d5b5e429fdb6f030" kindref="member">lcd_from_fb</ref>(frame_buff,<sp/>lcd_mem_base);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;<ref refid="apoman_8c_1a2d89e66b161e77ef3ba860e0bcd80da1" kindref="member">character_has_been_read</ref>,<sp/>&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="apoman_8c_1a6cf0bd745eade6d2d8304b9b72930ab4" kindref="member">read_thread_data</ref>.<ref refid="structread__thread__data__type_1a41eafad1f226f50088de23256b17f4c7" kindref="member">last_read</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Petr/Documents/apo_semestralka/final_score.c"/>
  </compounddef>
</doxygen>
