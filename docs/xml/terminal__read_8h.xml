<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="terminal__read_8h" kind="file" language="C++">
    <compoundname>terminal_read.h</compoundname>
    <includedby refid="apoman_8c" local="yes">C:/Users/Petr/Documents/apo_semestralka/apoman.c</includedby>
    <includedby refid="terminal__read_8c" local="yes">C:/Users/Petr/Documents/apo_semestralka/terminal_read.c</includedby>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/Petr/Documents/apo_semestralka/terminal_read.c</label>
        <link refid="terminal__read_8c"/>
      </node>
      <node id="1">
        <label>C:/Users/Petr/Documents/apo_semestralka/terminal_read.h</label>
        <link refid="terminal__read_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/Petr/Documents/apo_semestralka/apoman.c</label>
        <link refid="apoman_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="terminal__read_8h_1a6e5f9cf7005e2874fa80bac20e2452b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* input_thread</definition>
        <argsstring>(void *)</argsstring>
        <name>input_thread</name>
        <param>
          <type>void *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/terminal_read.h" line="15" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/terminal_read.c" bodystart="26" bodyend="64" declfile="C:/Users/Petr/Documents/apo_semestralka/terminal_read.h" declline="15" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Program<sp/>to<sp/>read<sp/>terminal<sp/>to<sp/>frame<sp/>buffer<sp/>on<sp/>MicroZed</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>based<sp/>MZ_APO<sp/>board<sp/>designed<sp/>by<sp/>Petr<sp/>Porazil<sp/>at<sp/>PiKRON</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>terminal_read.h<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>simple<sp/>program<sp/>to<sp/>read<sp/>terminal<sp/>in<sp/>raw<sp/>mode</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>(C)<sp/>Copyright<sp/>2021<sp/>by<sp/>Lukas<sp/>Nejezchleb</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>e-mail:<sp/><sp/><sp/>nejezluk@fel.cvut.cz</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>license:<sp/><sp/>any<sp/>combination<sp/>of<sp/>GPL,<sp/>LGPL,<sp/>MPL<sp/>or<sp/>BSD<sp/>licenses</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TERMINAL_READ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TERMINAL_READ_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="terminal__read_8h_1a6e5f9cf7005e2874fa80bac20e2452b6" kindref="member">input_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>of<sp/>the<sp/>thread:</highlight></codeline>
<codeline lineno="20"><highlight class="comment">initialising<sp/>mutex</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/>mtx;</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">inside<sp/>main<sp/>function<sp/>calling</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;mtx,<sp/>NULL);<sp/>//<sp/>initialize<sp/>mutex<sp/>with<sp/>default<sp/>attributes</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>read_thread_data_type<sp/>read_thread_data<sp/>=<sp/>{.quit<sp/>=<sp/>false,<sp/>.last_read<sp/>=<sp/>&apos;<sp/>&apos;};</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_t<sp/>read_thread;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_create(read_thread,<sp/>NULL,<sp/>input_thread,<sp/>&amp;read_thread_data);</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">to<sp/>acces<sp/>read_data<sp/>from<sp/>terminal</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;mtx);</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>variable_to_load_into<sp/>=<sp/>read_thread_data.last_read;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;mtx);</highlight></codeline>
<codeline lineno="35"><highlight class="comment">here<sp/>the<sp/>data<sp/>from<sp/>variable_to_load_into<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment">to<sp/>terminate<sp/>thread:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;mtx);</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>read_thread_data.quit<sp/>=<sp/>true;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;mtx);</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_join(read_thread,<sp/>NULL);<sp/>//wait<sp/>for<sp/>thread<sp/>to<sp/>join</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;mtx);</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Petr/Documents/apo_semestralka/terminal_read.h"/>
  </compounddef>
</doxygen>
