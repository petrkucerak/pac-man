<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="game_8c" kind="file" language="C++">
    <compoundname>game.c</compoundname>
    <includes refid="game_8h" local="yes">game.h</includes>
    <includes refid="update__peripherals_8h" local="yes">update_peripherals.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="draw__shapes_8h" local="yes">draw_shapes.h</includes>
    <includes refid="map__to__fb_8h" local="yes">map_to_fb.h</includes>
    <includes refid="map__from__template_8h" local="yes">map_from_template.h</includes>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="text__fb_8h" local="yes">text_fb.h</includes>
    <includes refid="font__types_8h" local="yes">font_types.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>map_template.h</label>
        <link refid="map__template_8h"/>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>C:/Users/Petr/Documents/apo_semestralka/game.c</label>
        <link refid="game_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>game.h</label>
        <link refid="game_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>font_types.h</label>
        <link refid="font__types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="8">
        <label>pacman.h</label>
        <link refid="pacman_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>draw_shapes.h</label>
        <link refid="draw__shapes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>update_peripherals.h</label>
        <link refid="update__peripherals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ghost.h</label>
        <link refid="ghost_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pthread.h</label>
      </node>
      <node id="17">
        <label>text_fb.h</label>
        <link refid="text__fb_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>map_to_fb.h</label>
        <link refid="map__to__fb_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>map_from_template.h</label>
        <link refid="map__from__template_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>data_structures.h</label>
        <link refid="data__structures_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="game_8c_1af84e8ae88873f09731321e62e77a1d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void led_blink</definition>
        <argsstring>(unsigned char *led_mem_base, int scare_countdown, int pacman_score)</argsstring>
        <name>led_blink</name>
        <param>
          <type>unsigned char *</type>
          <declname>led_mem_base</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scare_countdown</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pacman_score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/game.c" line="99" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/game.c" bodystart="99" bodyend="127" declfile="C:/Users/Petr/Documents/apo_semestralka/game.c" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pause</definition>
        <argsstring>(fb_data *fb, peripherals_data_t *peripherals)</argsstring>
        <name>pause</name>
        <param>
          <type><ref refid="structfb__data" kindref="compound">fb_data</ref> *</type>
          <declname>fb</declname>
        </param>
        <param>
          <type><ref refid="structperipherals__data__t" kindref="compound">peripherals_data_t</ref> *</type>
          <declname>peripherals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/game.c" line="179" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/game.c" bodystart="179" bodyend="204" declfile="C:/Users/Petr/Documents/apo_semestralka/game.c" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool game_tick</definition>
        <argsstring>(map_data *map, pacman_type *pacman, ghost_type *ghost_arr, int num_ghosts, int *scare)</argsstring>
        <name>game_tick</name>
        <param>
          <type><ref refid="structmap__data" kindref="compound">map_data</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structpacman__type" kindref="compound">pacman_type</ref> *</type>
          <declname>pacman</declname>
        </param>
        <param>
          <type><ref refid="structghost__type" kindref="compound">ghost_type</ref> *</type>
          <declname>ghost_arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ghosts</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>scare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/game.c" line="129" column="6" bodyfile="C:/Users/Petr/Documents/apo_semestralka/game.c" bodystart="129" bodyend="177" declfile="C:/Users/Petr/Documents/apo_semestralka/game.c" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="game_8c_1a72619e4d9b2b733c33327a53154c126b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int run_game</definition>
        <argsstring>(game_init_data_t *game_data, peripherals_data_t *peripherals)</argsstring>
        <name>run_game</name>
        <param>
          <type><ref refid="structgame__init__data__t" kindref="compound">game_init_data_t</ref> *</type>
          <declname>game_data</declname>
        </param>
        <param>
          <type><ref refid="structperipherals__data__t" kindref="compound">peripherals_data_t</ref> *</type>
          <declname>peripherals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>packman score </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petr/Documents/apo_semestralka/game.c" line="32" column="5" bodyfile="C:/Users/Petr/Documents/apo_semestralka/game.c" bodystart="32" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Program<sp/>to<sp/>draw<sp/>text<sp/>to<sp/>frame<sp/>buffer<sp/>on<sp/>MicroZed</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>based<sp/>MZ_APO<sp/>board<sp/>designed<sp/>by<sp/>Petr<sp/>Porazil<sp/>at<sp/>PiKRON</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>game.c<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>file<sp/>with<sp/>game<sp/>logic</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>(C)<sp/>Copyright<sp/>2021<sp/>by<sp/>Petr<sp/>Kucera,<sp/>Lukas<sp/>Nejezchleb</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>e-mail:<sp/><sp/><sp/>kucerp28@fel.cvut.cz,<sp/>nejezluk@fel.cvut.cz</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>license:<sp/><sp/>any<sp/>combination<sp/>of<sp/>GPL,<sp/>LGPL,<sp/>MPL<sp/>or<sp/>BSD<sp/>licenses</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="game_8h" kindref="compound">game.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="update__peripherals_8h" kindref="compound">update_peripherals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="draw__shapes_8h" kindref="compound">draw_shapes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="map__to__fb_8h" kindref="compound">map_to_fb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="map__from__template_8h" kindref="compound">map_from_template.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="text__fb_8h" kindref="compound">text_fb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="font__types_8h" kindref="compound">font_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//internal<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="game_8c_1af84e8ae88873f09731321e62e77a1d18" kindref="member">led_blink</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*led_mem_base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scare_countdown,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pacman_score);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c" kindref="member">pause</ref>(<ref refid="structfb__data" kindref="compound">fb_data</ref><sp/>*fb,<sp/><ref refid="structperipherals__data__t" kindref="compound">peripherals_data_t</ref><sp/>*peripherals);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>true<sp/>if<sp/>the<sp/>game<sp/>should<sp/>be<sp/>rendered<sp/>imedeatly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3" kindref="member">game_tick</ref>(<ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map,<sp/><ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/>*pacman,<sp/><ref refid="structghost__type" kindref="compound">ghost_type</ref><sp/>*ghost_arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ghosts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*scare);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//end<sp/>of<sp/>internal<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="game_8c_1a72619e4d9b2b733c33327a53154c126b" kindref="member">run_game</ref>(<ref refid="structgame__init__data__t" kindref="compound">game_init_data_t</ref><sp/>*game_data,<sp/><ref refid="structperipherals__data__t" kindref="compound">peripherals_data_t</ref><sp/>*peripherals)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map<sp/>=<sp/><ref refid="map__from__template_8c_1a901a095e25461784eabdda1071e872c8" kindref="member">create_map_data</ref>(peripherals-&gt;<ref refid="structperipherals__data__t_1ab09267ea5cf5fa173a23a69dd5f1bb26" kindref="member">lcd_w</ref>,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a5680649ae248685c18e72927444139ee" kindref="member">lcd_h</ref>,<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a2048c656939c9a5b734d0db71092b6bf" kindref="member">map</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>to<sp/>show<sp/>error<sp/>with<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="structfb__data" kindref="compound">fb_data</ref><sp/>fb;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>fb.<ref refid="structfb__data_1a377cdea530281d6fa239a9e14c1a7286" kindref="member">fb</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t)<sp/>*<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1ab09267ea5cf5fa173a23a69dd5f1bb26" kindref="member">lcd_w</ref><sp/>*<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a5680649ae248685c18e72927444139ee" kindref="member">lcd_h</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>fb.<ref refid="structfb__data_1a2474a5474cbff19523a51eb1de01cda4" kindref="member">width</ref><sp/>=<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1ab09267ea5cf5fa173a23a69dd5f1bb26" kindref="member">lcd_w</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>fb.<ref refid="structfb__data_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member">height</ref><sp/>=<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a5680649ae248685c18e72927444139ee" kindref="member">lcd_h</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fb.<ref refid="structfb__data_1a377cdea530281d6fa239a9e14c1a7286" kindref="member">fb</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>free(map-&gt;<ref refid="structmap__data_1a9818b17c7d2a7b36901aa275b76c39d0" kindref="member">board_arr</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>free(map);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/>pacman<sp/>=<sp/><ref refid="pacman_8c_1a6049d528917cb950659f2972d92cb432" kindref="member">create_pacman</ref>(map,<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a04be3af67b53e5039fb982da0fecae38" kindref="member">pacman_lives</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="structghost__type" kindref="compound">ghost_type</ref><sp/>ghost[game_data-&gt;<ref refid="structgame__init__data__t_1a71734b9ad1d4878eb9331cbed1ee5842" kindref="member">ghost_nr</ref>];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a71734b9ad1d4878eb9331cbed1ee5842" kindref="member">ghost_nr</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ghost[i]<sp/>=<sp/><ref refid="ghost_8c_1a14b4ae2c797e212ae5255036c699676a" kindref="member">create_ghost</ref>(map,<sp/>i);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>read<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>coins_to_eat<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scare_countdown<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((read<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(pacman.<ref refid="structpacman__type_1ac1d68ef9a5dd304c5015e07af7f2bb19" kindref="member">lives</ref><sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(coins_to_eat))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="config_8h_1a7645a891a19088e6fc698d38435dd4c9" kindref="member">GAME_SPEED</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3" kindref="member">game_tick</ref>(map,<sp/>&amp;pacman,<sp/>ghost,<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a71734b9ad1d4878eb9331cbed1ee5842" kindref="member">ghost_nr</ref>,<sp/>&amp;scare_countdown))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>the<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="game_8c_1af84e8ae88873f09731321e62e77a1d18" kindref="member">led_blink</ref>(peripherals-&gt;<ref refid="structperipherals__data__t_1a50905c9b00b3aa4d07fb32429550c7c0" kindref="member">led_mem_base</ref>,<sp/>scare_countdown,<sp/>pacman.<ref refid="structpacman__type_1aef160b7437d94056f1dc59646cd5b87d" kindref="member">score</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>coins_to_eat<sp/>=<sp/><ref refid="map__to__fb_8c_1a8c10c75361a49b8883775fc900adced6" kindref="member">render_map</ref>(map,<sp/>&amp;fb);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pacman_8c_1a9b14d2c075ef0768af01d694a839cd38" kindref="member">draw_pacman</ref>(&amp;pacman,<sp/>&amp;fb,<sp/>map);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a71734b9ad1d4878eb9331cbed1ee5842" kindref="member">ghost_nr</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ghost_8c_1a5a6a4ea7a54730dd11640485ca265353" kindref="member">draw_ghost</ref>(&amp;fb,<sp/>&amp;ghost[i],<sp/>map);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="update__peripherals_8c_1a27f1db817fb1375b46affe1dc4d0dc9b" kindref="member">led_strip_number</ref>(peripherals-&gt;<ref refid="structperipherals__data__t_1a50905c9b00b3aa4d07fb32429550c7c0" kindref="member">led_mem_base</ref>,<sp/>game_data-&gt;<ref refid="structgame__init__data__t_1a04be3af67b53e5039fb982da0fecae38" kindref="member">pacman_lives</ref>,<sp/>pacman.<ref refid="structpacman__type_1ac1d68ef9a5dd304c5015e07af7f2bb19" kindref="member">lives</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="update__peripherals_8c_1aa30de0dfddc51283d5b5e429fdb6f030" kindref="member">lcd_from_fb</ref>(&amp;fb,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a7c4a56da1b7b5d790b55198486e9c322" kindref="member">lcd_mem_base</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>new<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>read<sp/>=<sp/><ref refid="apoman_8c_1a6cf0bd745eade6d2d8304b9b72930ab4" kindref="member">read_thread_data</ref>.<ref refid="structread__thread__data__type_1a41eafad1f226f50088de23256b17f4c7" kindref="member">last_read</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>==<sp/><ref refid="config_8h_1a37ac765069375d3727139ca59cb8557c" kindref="member">PAUSE_KEY</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c" kindref="member">pause</ref>(&amp;fb,<sp/>peripherals);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="apoman_8c_1a6cf0bd745eade6d2d8304b9b72930ab4" kindref="member">read_thread_data</ref>.<ref refid="structread__thread__data__type_1a41eafad1f226f50088de23256b17f4c7" kindref="member">last_read</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>printf(<ref refid="config_8h_1adbb52fc3b2ec0fea2f350a39d8c3bd28" kindref="member">GAME_END_TERMINAL</ref>,<sp/>pacman.<ref refid="structpacman__type_1aef160b7437d94056f1dc59646cd5b87d" kindref="member">score</ref>,<sp/>pacman.<ref refid="structpacman__type_1ac1d68ef9a5dd304c5015e07af7f2bb19" kindref="member">lives</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>free(fb.<ref refid="structfb__data_1a377cdea530281d6fa239a9e14c1a7286" kindref="member">fb</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>free(map-&gt;<ref refid="structmap__data_1a9818b17c7d2a7b36901aa275b76c39d0" kindref="member">board_arr</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>free(map);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pacman.<ref refid="structpacman__type_1aef160b7437d94056f1dc59646cd5b87d" kindref="member">score</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="game_8c_1af84e8ae88873f09731321e62e77a1d18" kindref="member">led_blink</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*led_mem_base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scare_countdown,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pacman_score)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>color<sp/>=<sp/><ref refid="config_8h_1af6a54e35c04441964ee74f63733659e9" kindref="member">LED_NORMAL_COLOR</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((scare_countdown<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(period<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//scared<sp/>regime<sp/>began</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>period<sp/>=<sp/>scare_countdown<sp/>/<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>color<sp/>=<sp/><ref refid="config_8h_1a49cfb1c1270ff147a44d8dd7166b5473" kindref="member">LED_SCARE_COLOR2</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scare_countdown<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>time++;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;=<sp/>period)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>scare_countdown<sp/>/<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>(color<sp/>==<sp/><ref refid="config_8h_1aadb76337df4b0a055a30de34b0e3dbcc" kindref="member">LED_SCARE_COLOR1</ref>)<sp/>?<sp/><ref refid="config_8h_1a49cfb1c1270ff147a44d8dd7166b5473" kindref="member">LED_SCARE_COLOR2</ref><sp/>:<sp/><ref refid="config_8h_1aadb76337df4b0a055a30de34b0e3dbcc" kindref="member">LED_SCARE_COLOR1</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>scare<sp/>regime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>color<sp/>=<sp/>(((uint8_t)(255*(pacman_score/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="config_8h_1aa27bf8c0d78735062b3cf41d2a618b30" kindref="member">MAX_SCORE</ref>)))&lt;&lt;8);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="update__peripherals_8c_1afdba9f1f14e9a81789f87d33a36bda35" kindref="member">sel_leds_color</ref>(led_mem_base,<sp/>color);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3" kindref="member">game_tick</ref>(<ref refid="structmap__data" kindref="compound">map_data</ref><sp/>*map,<sp/><ref refid="structpacman__type" kindref="compound">pacman_type</ref><sp/>*pacman,<sp/><ref refid="structghost__type" kindref="compound">ghost_type</ref><sp/>*ghost_arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ghosts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*scare)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*scare<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_ghosts;<sp/>++j)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ghost_arr[j].<ref refid="structghost__type_1a9baade4c57be1fd2d7ad88f233bb5e7d" kindref="member">scared</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ghost_arr[j].<ref refid="structghost__type_1a4b700a8d1d6df04cafe936a0855ff004" kindref="member">moving_randomly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*scare<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>(*scare)--;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pacman_8c_1ae1b36e370a9b73a0eed9ad43e53db1f0" kindref="member">pacman_move</ref>(pacman,<sp/>map))<sp/></highlight><highlight class="comment">//<sp/>eaten<sp/>supercoin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>*scare<sp/>=<sp/><ref refid="config_8h_1a5cba511e2fe7a2d66d90d3e3d810db3c" kindref="member">SCARE_REGIME_DURATION</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_ghosts;<sp/>++j)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ghost_arr[j].<ref refid="structghost__type_1a9baade4c57be1fd2d7ad88f233bb5e7d" kindref="member">scared</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ghost_arr[j].<ref refid="structghost__type_1a4b700a8d1d6df04cafe936a0855ff004" kindref="member">moving_randomly</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scare_regime<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//find<sp/>out<sp/>if<sp/>by<sp/>chance<sp/>all<sp/>ghost<sp/>have<sp/>not<sp/>been<sp/>eaten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_ghosts;<sp/>++i)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>every<sp/>ghost<sp/>and<sp/>check<sp/>if<sp/>pacman<sp/>has<sp/>not<sp/>been<sp/>eaten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ghost_8c_1ae10703308badbc547da248d1dddcd699" kindref="member">ghost_move</ref>(&amp;ghost_arr[i],<sp/>map,<sp/>pacman))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pacman<sp/>=<sp/><ref refid="pacman_8c_1a6049d528917cb950659f2972d92cb432" kindref="member">create_pacman</ref>(map,<sp/>pacman-&gt;<ref refid="structpacman__type_1ac1d68ef9a5dd304c5015e07af7f2bb19" kindref="member">lives</ref><sp/>-<sp/>1,<sp/>pacman-&gt;<ref refid="structpacman__type_1aef160b7437d94056f1dc59646cd5b87d" kindref="member">score</ref><sp/>-<sp/><ref refid="config_8h_1a8fafbbe182b133765c10fc2d5bb0a939" kindref="member">SCORE_DEATH_PENALTY</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_ghosts;<sp/>++j)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ghost_arr[j]<sp/>=<sp/><ref refid="ghost_8c_1a14b4ae2c797e212ae5255036c699676a" kindref="member">create_ghost</ref>(map,<sp/>j);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>scare_regime<sp/>=<sp/>scare_regime<sp/>||<sp/>(ghost_arr[i].<ref refid="structghost__type_1a9baade4c57be1fd2d7ad88f233bb5e7d" kindref="member">scared</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scare_regime)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>(*scare)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c" kindref="member">pause</ref>(<ref refid="structfb__data" kindref="compound">fb_data</ref><sp/>*fb,<sp/><ref refid="structperipherals__data__t" kindref="compound">peripherals_data_t</ref><sp/>*peripherals)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>read<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="text__fb_8c_1a6c9c3fce44e83e9b6076cdc74ba11464" kindref="member">draw_text_center</ref>(fb,<sp/><ref refid="config_8h_1a9e873fa6547841f8143e810e80210ae6" kindref="member">PAUSE_TEXT</ref>,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1ab09267ea5cf5fa173a23a69dd5f1bb26" kindref="member">lcd_w</ref><sp/>/<sp/>2,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a5680649ae248685c18e72927444139ee" kindref="member">lcd_h</ref><sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8h_1a5c05df71fac138e03ad0be6724903c11" kindref="member">PAUSE_TEXT_SIZE</ref>,<sp/>&amp;<ref refid="config_8h_1a5e903e9378d7c7004f51673ed0141fd7" kindref="member">PAUSE_FONT</ref>,<sp/><ref refid="config_8h_1a7bc224f294717d13a0a9e72a90d26727" kindref="member">PAUSE_COLOR</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>subtext[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="config_8h_1ac7bf42afbbee631d4c25c95fe4893f9e" kindref="member">PAUSE_SUBTEXT</ref>)<sp/>+<sp/>10];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>snprintf(subtext,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="config_8h_1ac7bf42afbbee631d4c25c95fe4893f9e" kindref="member">PAUSE_SUBTEXT</ref>)<sp/>+<sp/>10,<sp/><ref refid="config_8h_1ac7bf42afbbee631d4c25c95fe4893f9e" kindref="member">PAUSE_SUBTEXT</ref>,<sp/><ref refid="config_8h_1a37ac765069375d3727139ca59cb8557c" kindref="member">PAUSE_KEY</ref>,<sp/><ref refid="config_8h_1a539879aced8aba3e5b8acebca1d473b5" kindref="member">KEY_QUIT</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="text__fb_8c_1a6c9c3fce44e83e9b6076cdc74ba11464" kindref="member">draw_text_center</ref>(fb,<sp/>subtext,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1ab09267ea5cf5fa173a23a69dd5f1bb26" kindref="member">lcd_w</ref><sp/>/<sp/>2,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a5680649ae248685c18e72927444139ee" kindref="member">lcd_h</ref><sp/>/<sp/>2<sp/>+<sp/><ref refid="config_8h_1a66c11ca42311ea28f929f3d1cd3a6d10" kindref="member">PAUSE_SUBTEXT_OFFSET</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_8h_1ac21dee9ed11d63c0c641a3379f98df44" kindref="member">PAUSE_SUBTEXT_SIZE</ref>,<sp/>&amp;<ref refid="config_8h_1a5e903e9378d7c7004f51673ed0141fd7" kindref="member">PAUSE_FONT</ref>,<sp/><ref refid="config_8h_1a7bc224f294717d13a0a9e72a90d26727" kindref="member">PAUSE_COLOR</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="update__peripherals_8c_1aa30de0dfddc51283d5b5e429fdb6f030" kindref="member">lcd_from_fb</ref>(fb,<sp/>peripherals-&gt;<ref refid="structperipherals__data__t_1a7c4a56da1b7b5d790b55198486e9c322" kindref="member">lcd_mem_base</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(read<sp/>!=<sp/><ref refid="config_8h_1a37ac765069375d3727139ca59cb8557c" kindref="member">PAUSE_KEY</ref><sp/>&amp;&amp;<sp/>read<sp/>!=<sp/><ref refid="config_8h_1a539879aced8aba3e5b8acebca1d473b5" kindref="member">KEY_QUIT</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;<ref refid="apoman_8c_1a2d89e66b161e77ef3ba860e0bcd80da1" kindref="member">character_has_been_read</ref>,<sp/>&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>read<sp/>=<sp/><ref refid="apoman_8c_1a6cf0bd745eade6d2d8304b9b72930ab4" kindref="member">read_thread_data</ref>.<ref refid="structread__thread__data__type_1a41eafad1f226f50088de23256b17f4c7" kindref="member">last_read</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>==<sp/><ref refid="config_8h_1a37ac765069375d3727139ca59cb8557c" kindref="member">PAUSE_KEY</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>read<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="apoman_8c_1a6cf0bd745eade6d2d8304b9b72930ab4" kindref="member">read_thread_data</ref>.<ref refid="structread__thread__data__type_1a41eafad1f226f50088de23256b17f4c7" kindref="member">last_read</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="apoman_8c_1a2680f9fe5653a596c7e779b838180fdc" kindref="member">mtx</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Petr/Documents/apo_semestralka/game.c"/>
  </compounddef>
</doxygen>
