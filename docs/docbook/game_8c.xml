<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_game_8c" xml:lang="en-US">
<title>C:/Users/Petr/Documents/apo_semestralka/game.c File Reference</title>
<indexterm><primary>C:/Users/Petr/Documents/apo_semestralka/game.c</primary></indexterm>
<para>

<para>Module where the game is taking place. </para>
 
</para>
<programlisting>#include &quot;game.h&quot;
#include &quot;update_peripherals.h&quot;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &quot;draw_shapes.h&quot;
#include &quot;map_to_fb.h&quot;
#include &quot;map_from_template.h&quot;
#include &quot;config.h&quot;
#include &quot;text_fb.h&quot;
#include &quot;font_types.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_game_8c_1a72619e4d9b2b733c33327a53154c126b">run_game</link> (<link linkend="_structgame__init__data__t">game_init_data_t</link> *game_data, <link linkend="_structperipherals__data__t">peripherals_data_t</link> *peripherals)</para>

<para>Initialises all necessary data structures and loops the game tick and refreshing screen while the player has not won, lost or pressed the q key. </para>
</listitem>
            <listitem><para>void <link linkend="_game_8c_1af84e8ae88873f09731321e62e77a1d18">led_blink</link> (unsigned char *led_mem_base, int scare_countdown, int pacman_score)</para>

<para>Internal functions for setting the color of RGB leds according to the game state. </para>
</listitem>
            <listitem><para>bool <link linkend="_game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3">game_tick</link> (<link linkend="_structmap__data">map_data</link> *map, <link linkend="_structpacman__type">pacman_type</link> *pacman, <link linkend="_structghost__type">ghost_type</link> *ghost_arr, int num_ghosts, int *scare)</para>

<para>moves pacman and each ghost one step, checking for collisions and user input </para>
</listitem>
            <listitem><para>void <link linkend="_game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c">pause</link> (<link linkend="_structfb__data">fb_data</link> *fb, <link linkend="_structperipherals__data__t">peripherals_data_t</link> *peripherals)</para>

<para>displays the pause message and waits for user to press the pause of quit key </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Module where the game is taking place. </para>

<para><formalpara><title>Author</title>

<para>Lukas Nejezchleb (<link xlink:href="mailto:nejezluk@fel.cvut.cz">nejezluk@fel.cvut.cz</link>), Petr Kucera (<link xlink:href="mailto:kucerp28@fel.cvut.cz">kucerp28@fel.cvut.cz</link>) </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2021-05-04</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2021 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_game_8c_1ac055e6ae3ef32e12a7c56e62bae12db3"/>    <section>
    <title>game_tick()</title>
<indexterm><primary>game_tick</primary><secondary>game.c</secondary></indexterm>
<indexterm><primary>game.c</primary><secondary>game_tick</secondary></indexterm>
<para><computeroutput>bool game_tick (<link linkend="_structmap__data">map_data</link> * map, <link linkend="_structpacman__type">pacman_type</link> * pacman, <link linkend="_structghost__type">ghost_type</link> * ghost_arr, int num_ghosts, int * scare)</computeroutput></para><para>

<para>moves pacman and each ghost one step, checking for collisions and user input </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>pacman</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>ghost_arr</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>num_ghosts</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>scare</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true </para>

<para>false </para>
</formalpara>
</para>
    </section><anchor xml:id="_game_8c_1af84e8ae88873f09731321e62e77a1d18"/>    <section>
    <title>led_blink()</title>
<indexterm><primary>led_blink</primary><secondary>game.c</secondary></indexterm>
<indexterm><primary>game.c</primary><secondary>led_blink</secondary></indexterm>
<para><computeroutput>void led_blink (unsigned char * led_mem_base, int scare_countdown, int pacman_score)</computeroutput></para><para>

<para>Internal functions for setting the color of RGB leds according to the game state. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>led_mem_base</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>scare_countdown</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>pacman_score</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_game_8c_1ac1ff0112ff0bb8c1a4d67cd18dc3eb3c"/>    <section>
    <title>pause()</title>
<indexterm><primary>pause</primary><secondary>game.c</secondary></indexterm>
<indexterm><primary>game.c</primary><secondary>pause</secondary></indexterm>
<para><computeroutput>void pause (<link linkend="_structfb__data">fb_data</link> * fb, <link linkend="_structperipherals__data__t">peripherals_data_t</link> * peripherals)</computeroutput></para><para>

<para>displays the pause message and waits for user to press the pause of quit key </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>fb</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>peripherals</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_game_8c_1a72619e4d9b2b733c33327a53154c126b"/>    <section>
    <title>run_game()</title>
<indexterm><primary>run_game</primary><secondary>game.c</secondary></indexterm>
<indexterm><primary>game.c</primary><secondary>run_game</secondary></indexterm>
<para><computeroutput>int run_game (<link linkend="_structgame__init__data__t">game_init_data_t</link> * game_data, <link linkend="_structperipherals__data__t">peripherals_data_t</link> * peripherals)</computeroutput></para><para>

<para>Initialises all necessary data structures and loops the game tick and refreshing screen while the player has not won, lost or pressed the q key. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>game_data</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>peripherals</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int pac-man game score </para>
</formalpara>
</para>
</section>
</section>
</section>
