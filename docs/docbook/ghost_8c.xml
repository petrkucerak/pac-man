<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ghost_8c" xml:lang="en-US">
<title>C:/Users/Petr/Documents/apo_semestralka/ghost.c File Reference</title>
<indexterm><primary>C:/Users/Petr/Documents/apo_semestralka/ghost.c</primary></indexterm>
<para>

<para>Module where all the logic and movement of ghost is placed. </para>
 
</para>
<programlisting>#include &quot;ghost.h&quot;
#include &quot;data_structures.h&quot;
#include &quot;draw_shapes.h&quot;
#include &quot;map_from_template.h&quot;
#include &quot;config.h&quot;
#include &lt;stdbool.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_ghost_8c_1ae10703308badbc547da248d1dddcd699">ghost_move</link> (<link linkend="_structghost__type">ghost_type</link> *ghost, <link linkend="_structmap__data">map_data</link> *map, <link linkend="_structpacman__type">pacman_type</link> *pacman)</para>

<para>Has small chance to change the ghost movement from random to targeting and vice versa. Changes the ghosts direction if there are more possibilities, moves the ghost in the resulting direction. </para>
</listitem>
            <listitem><para>bool <link linkend="_ghost_8c_1a25d891c687c3f7006638701ab4856d35">ghost_can_move</link> (<link linkend="_structghost__type">ghost_type</link> *ghost, int dirx, int diry, <link linkend="_structmap__data">map_data</link> *map)</para>

<para>Returns true if ghost can move in given direction. </para>
</listitem>
            <listitem><para>int <link linkend="_ghost_8c_1aea3ea3ec6383019544b3e889015fc6d0">create_moves</link> (<link linkend="_structmoves__costs__t">moves_costs_t</link> *moves_arr, <link linkend="_structghost__type">ghost_type</link> *ghost, <link linkend="_structmap__data">map_data</link> *map, <link linkend="_structpacman__type">pacman_type</link> *pacman)</para>

<para>Returns number of possible moves, which it has put into the array along with their cost. </para>
</listitem>
            <listitem><para>void <link linkend="_ghost_8c_1a5a6a4ea7a54730dd11640485ca265353">draw_ghost</link> (<link linkend="_structfb__data">fb_data</link> *fb, <link linkend="_structghost__type">ghost_type</link> *ghost, <link linkend="_structmap__data">map_data</link> *map)</para>

<para>Draws the ghost to frame buffer with color indicating its state. </para>
</listitem>
            <listitem><para><link linkend="_structghost__type">ghost_type</link> <link linkend="_ghost_8c_1a14b4ae2c797e212ae5255036c699676a">create_ghost</link> (<link linkend="_structmap__data">map_data</link> *map, int ghost_nr)</para>

<para>Creates the ghost at spawning point at map. </para>
</listitem>
            <listitem><para>void <link linkend="_ghost_8c_1a5384f018ac62b15c7f5e61d662a0e51c">change_direction</link> (<link linkend="_structghost__type">ghost_type</link> *ghost, int possibilities, <link linkend="_structmoves__costs__t">moves_costs_t</link> *moves_options)</para>

<para>Changes the direction of ghost to the path that would lead the closest to pacman or random if ghost is moving randomly. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Module where all the logic and movement of ghost is placed. </para>

<para><formalpara><title>Author</title>

<para>Lukas Nejezchleb (<link xlink:href="mailto:nejezluk@fel.cvut.cz">nejezluk@fel.cvut.cz</link>) </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2021-05-04</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2021 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_ghost_8c_1a5384f018ac62b15c7f5e61d662a0e51c"/>    <section>
    <title>change_direction()</title>
<indexterm><primary>change_direction</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>change_direction</secondary></indexterm>
<para><computeroutput>void change_direction (<link linkend="_structghost__type">ghost_type</link> * ghost, int possibilities, <link linkend="_structmoves__costs__t">moves_costs_t</link> * moves_options)</computeroutput></para><para>

<para>Changes the direction of ghost to the path that would lead the closest to pacman or random if ghost is moving randomly. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ghost</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>possibilities</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>moves_options</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_ghost_8c_1a14b4ae2c797e212ae5255036c699676a"/>    <section>
    <title>create_ghost()</title>
<indexterm><primary>create_ghost</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>create_ghost</secondary></indexterm>
<para><computeroutput><link linkend="_structghost__type">ghost_type</link> create_ghost (<link linkend="_structmap__data">map_data</link> * map, int ghost_nr)</computeroutput></para><para>

<para>Creates the ghost at spawning point at map. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>ghost_nr</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><link linkend="_structghost__type">ghost_type</link> </para>
</formalpara>
</para>
    </section><anchor xml:id="_ghost_8c_1aea3ea3ec6383019544b3e889015fc6d0"/>    <section>
    <title>create_moves()</title>
<indexterm><primary>create_moves</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>create_moves</secondary></indexterm>
<para><computeroutput>int create_moves (<link linkend="_structmoves__costs__t">moves_costs_t</link> * moves_arr, <link linkend="_structghost__type">ghost_type</link> * ghost, <link linkend="_structmap__data">map_data</link> * map, <link linkend="_structpacman__type">pacman_type</link> * pacman)</computeroutput></para><para>

<para>Returns number of possible moves, which it has put into the array along with their cost. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>moves_arr</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>ghost</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>pacman</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>returns number of possible moves, which it has put into the array along with their cost </para>
</formalpara>
</para>
    </section><anchor xml:id="_ghost_8c_1a5a6a4ea7a54730dd11640485ca265353"/>    <section>
    <title>draw_ghost()</title>
<indexterm><primary>draw_ghost</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>draw_ghost</secondary></indexterm>
<para><computeroutput>void draw_ghost (<link linkend="_structfb__data">fb_data</link> * fb, <link linkend="_structghost__type">ghost_type</link> * ghost, <link linkend="_structmap__data">map_data</link> * map)</computeroutput></para><para>

<para>Draws the ghost to frame buffer with color indicating its state. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>fb</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>ghost</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_ghost_8c_1a25d891c687c3f7006638701ab4856d35"/>    <section>
    <title>ghost_can_move()</title>
<indexterm><primary>ghost_can_move</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>ghost_can_move</secondary></indexterm>
<para><computeroutput>bool ghost_can_move (<link linkend="_structghost__type">ghost_type</link> * ghost, int dirx, int diry, <link linkend="_structmap__data">map_data</link> * map)</computeroutput></para><para>

<para>Returns true if ghost can move in given direction. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ghost</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>dirx</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>diry</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true </para>

<para>false </para>
</formalpara>
</para>
    </section><anchor xml:id="_ghost_8c_1ae10703308badbc547da248d1dddcd699"/>    <section>
    <title>ghost_move()</title>
<indexterm><primary>ghost_move</primary><secondary>ghost.c</secondary></indexterm>
<indexterm><primary>ghost.c</primary><secondary>ghost_move</secondary></indexterm>
<para><computeroutput>bool ghost_move (<link linkend="_structghost__type">ghost_type</link> * ghost, <link linkend="_structmap__data">map_data</link> * map, <link linkend="_structpacman__type">pacman_type</link> * pacman)</computeroutput></para><para>

<para>Has small chance to change the ghost movement from random to targeting and vice versa. Changes the ghosts direction if there are more possibilities, moves the ghost in the resulting direction. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ghost</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>map</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                            <row>
                                <entry>pacman</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true </para>

<para>false </para>
</formalpara>
</para>
</section>
</section>
</section>
